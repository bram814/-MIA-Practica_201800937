-- Script (DDL) con el borrado y creado de la base de datos propuesta en el modelo relacional.
-- Debe tener el siguiente formato: [MIA]ScriptMR_#CARNET.sql

------------------------------------ CREANDO TABLA PAIS ------------------------------------
CREATE TABLE pais(
  id_pais INT GENERATED BY DEFAULT AS IDENTITY,
  nombre VARCHAR,
  primary key (id_pais)
);

------------------------------------ CREANDO TABLA CIUDAD ------------------------------------
CREATE TABLE ciudad(
	id_ciudad INT GENERATED BY DEFAULT AS IDENTITY,
	nombre VARCHAR,
	id_pais INT,
  	primary key (id_ciudad),
	FOREIGN KEY (id_pais) REFERENCES pais(id_pais)
);

------------------------------------ CREANDO TABLA DIRECCION ------------------------------------
CREATE TABLE direccion(
	id_direccion INT GENERATED BY DEFAULT AS IDENTITY,
	nombre_direccion VARCHAR,
	codigo_postal VARCHAR,
	id_ciudad INT,
  	primary key (id_direccion),
	FOREIGN KEY (id_ciudad) REFERENCES ciudad(id_ciudad)
);

------------------------------------ CREANDO TABLA TIENDA ------------------------------------
CREATE TABLE tienda(
	id_tienda INT GENERATED BY DEFAULT AS IDENTITY,
	nombre VARCHAR,
	id_direccion INT,
	PRIMARY KEY(id_tienda),
	FOREIGN KEY(id_direccion) REFERENCES direccion(id_direccion)
);

------------------------------------ CREANDO TABLA EMPLEADO ------------------------------------
CREATE TABLE empleado(
	id_empleado INT GENERATED BY DEFAULT AS IDENTITY,
	nombre VARCHAR,
	apellido VARCHAR,
	correo VARCHAR,
	nombre_usuario VARCHAR,
	contrasena VARCHAR,
	estado VARCHAR,
	id_direccion INT,
	id_tienda INT,
  	primary key (id_empleado),
	FOREIGN KEY (id_direccion) REFERENCES direccion(id_direccion),
	FOREIGN KEY (id_tienda) REFERENCES tienda(id_tienda)
);

------------------------------------ CREANDO TABLA ENCARGADO_TIENDA ------------------------------------
CREATE TABLE encargado_tienda(
	id_encargado_tienda INT GENERATED BY DEFAULT AS IDENTITY,
	id_empleado INT,
	id_tienda INT,
	PRIMARY KEY (id_encargado_tienda),
	FOREIGN KEY (id_empleado) REFERENCES empleado(id_empleado),
	FOREIGN KEY (id_tienda) REFERENCES tienda(id_tienda)
);

------------------------------------ CREANDO TABLA CLIENTE ------------------------------------
CREATE TABLE cliente(
	id_cliente INT GENERATED BY DEFAULT AS IDENTITY,
	nombre VARCHAR,
	apellido VARCHAR,
	correo VARCHAR,
	fecha_registro VARCHAR,
	estado VARCHAR,
	id_direccion INT,
	id_tienda INT,
	PRIMARY KEY (id_cliente),
	FOREIGN KEY (id_direccion) REFERENCES direccion(id_direccion),
	FOREIGN KEY (id_tienda) REFERENCES tienda(id_tienda)
);

------------------------------------ INFORMACION CLASIFICACION ------------------------------------
CREATE TABLE clasificacion(
	id_clasificacion INT GENERATED BY DEFAULT AS IDENTITY,
	nombre_clasificacion VARCHAR,
	PRIMARY KEY(id_clasificacion)
);

------------------------------------ PELICULA ------------------------------------
CREATE TABLE pelicula(
	id_pelicula INT GENERATED BY DEFAULT AS IDENTITY,
	titulo VARCHAR,
	descripcion VARCHAR,
	lanzamiento VARCHAR,
	duracion VARCHAR, 
	dias_renta VARCHAR,
	costo_renta VARCHAR,
	costo_por_damage VARCHAR,
	id_clasificacion INT,
	PRIMARY KEY(id_pelicula),
	FOREIGN KEY(id_clasificacion) REFERENCES clasificacion(id_clasificacion)
);

------------------------------------ LENGUAJE ------------------------------------
CREATE TABLE lenguaje(
	id_lenguaje INT GENERATED BY DEFAULT AS IDENTITY,
	nombre_lenguaje VARCHAR,
	PRIMARY KEY(id_lenguaje)
);

------------------------------------ CATEGORIA ------------------------------------
CREATE TABLE categoria(
	id_categoria INT GENERATED BY DEFAULT AS IDENTITY,
	nombre_categoria VARCHAR,
	PRIMARY KEY(id_categoria)
);

------------------------------------ ACTOR ------------------------------------
CREATE TABLE actor(
	id_actor INT GENERATED BY DEFAULT AS IDENTITY,
	nombre_actor VARCHAR,
	PRIMARY KEY(id_actor)
);

------------------------------------ LENGUAJE_PELICULA ------------------------------------
CREATE TABLE lenguaje_pelicula(
	id_lenguaje_pelicula INT GENERATED BY DEFAULT AS IDENTITY,
	id_lenguaje INT,
	id_pelicula INT,
	PRIMARY KEY(id_lenguaje_pelicula),
	FOREIGN KEY(id_lenguaje) REFERENCES lenguaje(id_lenguaje),
	FOREIGN KEY(id_pelicula) REFERENCES pelicula(id_pelicula)
);

------------------------------------ CATEGORIA_PELICULA ------------------------------------
CREATE TABLE categoria_pelicula(
	id_categoria_pelicula INT GENERATED BY DEFAULT AS IDENTITY,
	id_pelicula INT,
	id_categoria INT,
	PRIMARY KEY(id_categoria_pelicula),
	FOREIGN KEY(id_pelicula) REFERENCES pelicula(id_pelicula),
	FOREIGN KEY(id_categoria) REFERENCES categoria(id_categoria)
);
	
------------------------------------ ACTOR_PELICULA ------------------------------------
CREATE TABLE actor_pelicula(
	id_actor_pelicula INT GENERATED BY DEFAULT AS IDENTITY,
	id_pelicula INT,
	id_actor INT,
	PRIMARY KEY(id_actor_pelicula),
	FOREIGN KEY(id_pelicula) REFERENCES pelicula(id_pelicula),
	FOREIGN KEY(id_actor) REFERENCES actor(id_actor)
);

------------------------------------ INVENTARIO ------------------------------------
CREATE TABLE inventario(
	id_inventario INT GENERATED BY DEFAULT AS IDENTITY,
	id_pelicula INT,
	id_tienda INT,
	cantidad INT,
	PRIMARY KEY(id_inventario),
	FOREIGN KEY(id_pelicula) REFERENCES pelicula(id_pelicula),
	FOREIGN KEY(id_tienda) REFERENCES tienda(id_tienda)
);

------------------------------------ RENTA ------------------------------------
CREATE TABLE renta(
	id_renta INT GENERATED BY DEFAULT AS IDENTITY,
	monto VARCHAR,
	fecha_pago VARCHAR,
	fecha_renta VARCHAR,
	fecha_retorno VARCHAR,
	id_empleado INT,
	id_tienda INT,
	id_cliente INT,
	PRIMARY KEY(id_renta),
	FOREIGN KEY(id_empleado) REFERENCES empleado(id_empleado),
	FOREIGN KEY(id_tienda) REFERENCES tienda(id_tienda),
	FOREIGN KEY(id_cliente) REFERENCES cliente(id_cliente)
);

-------------------------------- BORRADO TOTAL EN ORDEN --------------------------------
	
-- ELIMINAR DATOS DE LA TABLA RENTA
DELETE FROM renta;
-- ELIMINAR DATOS DE LA TABLA INVENTARIO
DELETE FROM inventario;
-- ELIMINAR DATOS DE LA TABLA ACTOR_PELICULA
DELETE FROM actor_pelicula;
-- ELIMINAR DATOS DE LA TABLA CATEGORIA_PELICULA
DELETE FROM categoria_pelicula;
-- ELIMINAR DATOS DE LA TABLA LENGUAJE_PELICULA
DELETE FROM lenguaje_pelicula;
-- ELIMINAR DATOS DE LA TABLA ACTOR
DELETE FROM actor;
-- ELIMINAR DATOS DE LA TABLA CATEGORIA
DELETE FROM categoria;
-- ELIMINAR DATOS DE LA TABLA LENGUAJE
DELETE FROM lenguaje;
-- ELIMINAR DATOS DE LA TABLA PELICULA
DELETE FROM pelicula;
-- ELIMINAR DATOS DE LA TABLA CLASIFICACION
DELETE FROM clasificacion;
-- ELIMINAR DATOS DE LA TABLA CLIENTE
DELETE FROM cliente;
-- ELIMINAR DATOS DE LA TABLA ENCARGADO_TIENDA
DELETE FROM encargado_tienda;
-- ELIMINAR DATOS DE LA TABLA EMPLEADO
DELETE FROM empleado;
-- ELIMINAR DATOS DE LA TABLA TIENDA
DELETE FROM tienda;
-- ELIMINAR DATOS DE DIRECCION
DELETE FROM direccion;
-- ELIMINAR DATOS CIUDAD
DELETE FROM ciudad;
-- ELIMINA LOS DATOS DE LA TEMPORAL
DELETE FROM pais;



-- ELIMINAR TABLA RENTA
DROP TABLE renta;
-- ELIMINAR TABLA INVENTARIO
DROP TABLE inventario;
-- ELIMINAR TABLA ACTOR_PELICULA
DROP TABLE actor_pelicula;
-- ELIMINAR TABLA CATEGORIA_PELICULA
DROP TABLE categoria_pelicula;
-- ELIMINAR TABLA LENGUAJE_PELICULA
DROP TABLE lenguaje_pelicula;
-- ELIMINAR TABLA ACTOR
DROP TABLE actor;
-- ELIMINAR TABLA CATEGORIA
DROP TABLE categoria;
-- ELIMINAR TABLA LENGUAJE
DROP TABLE lenguaje;
-- ELIMINAR TABLA DE LA TABLA PELICULA
DROP TABLE pelicula;
-- ELIMINAR TABLA CLASIFICACION
DROP TABLE clasificacion;
-- ELIMINAR TABLA CLIENTE
DROP TABLE cliente;
-- ELIMINAR TABLA ENCARGADO_TIENDA
DROP TABLE encargado_tienda;
-- ELIMINAR TABLA EMPLEADO
DROP TABLE empleado;
-- ELIMINAR TIENDA
DROP TABLE tienda;
-- ELMINAR TABLA DIRECCION
DROP TABLE direccion;
-- ELMINAR TABLA CIUDAD
DROP TABLE ciudad;
-- ELIMINA LA TABLA PAIS
DROP TABLE pais;